{"ast":null,"code":"var _jsxFileName = \"C:\\\\U\\\\parcial-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport header from './assets/panel grande.png';\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [validationStates, setValidationStates] = useState({\n    userNameState: true,\n    // True when valid\n    passwordState: true // True when valid\n  });\n  const navigate = useNavigate(); // Hook para la redirección\n\n  const validateUserName = userName => {\n    return userName.length > 0; // Validar que el nombre de usuario no esté vacío\n  };\n  const validatePassword = password => {\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{9,}$/; // Contraseña debe tener al menos 9 caracteres, con letras y números\n    return passwordRegex.test(password);\n  };\n  const handleUserChange = e => {\n    setFormValues({\n      ...formValues,\n      userName: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setFormValues({\n      ...formValues,\n      password: e.target.value\n    });\n  };\n  const clickSubmit = () => {\n    const isValidUserName = validateUserName(formValues.userName);\n    const isValidPassword = validatePassword(formValues.password);\n    setValidationStates({\n      userNameState: isValidUserName,\n      passwordState: isValidPassword\n    });\n    if (isValidUserName && isValidPassword) {\n      // Redirigir a robots si las credenciales son válidas\n      navigate(\"/robots\");\n    } else {\n      alert(\"Please correct the errors before submitting.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: header\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-6\",\n        controlId: \"formBasicUserName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nombre de usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingresa tu nombre de usuario\",\n          onChange: handleUserChange,\n          value: formValues.userName,\n          isInvalid: !validationStates.userNameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), !validationStates.userNameState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"El nombre de usuario no puede estar vac\\xEDo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), validationStates.userNameState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"El nombre de usuario es obligatorio.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          onChange: handlePasswordChange,\n          value: formValues.password,\n          isInvalid: !validationStates.passwordState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), !validationStates.passwordState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"La contrase\\xF1a debe tener al menos 9 caracteres, incluyendo letras y n\\xFAmeros.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), validationStates.passwordState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Aseg\\xFArate de que tu contrase\\xF1a tenga n\\xFAmeros y letras y sea de al menos 9 caracteres.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: clickSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"BSwMlhbeEiE4iRxNYzVVF68m8Us=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["header","React","useState","Form","Button","useNavigate","jsxDEV","_jsxDEV","App","_s","formValues","setFormValues","userName","password","validationStates","setValidationStates","userNameState","passwordState","navigate","validateUserName","length","validatePassword","passwordRegex","test","handleUserChange","e","target","value","handlePasswordChange","clickSubmit","isValidUserName","isValidPassword","alert","children","src","fileName","_jsxFileName","lineNumber","columnNumber","Group","className","controlId","Label","Control","type","placeholder","onChange","isInvalid","Text","variant","onClick","_c","$RefreshReg$"],"sources":["C:/U/parcial-web/src/App.js"],"sourcesContent":["import './App.css';\r\nimport header from './assets/panel grande.png';\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [formValues, setFormValues] = useState({\r\n    userName: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [validationStates, setValidationStates] = useState({\r\n    userNameState: true, // True when valid\r\n    passwordState: true, // True when valid\r\n  });\r\n\r\n  const navigate = useNavigate(); // Hook para la redirección\r\n\r\n  const validateUserName = (userName) => {\r\n    return userName.length > 0; // Validar que el nombre de usuario no esté vacío\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{9,}$/; // Contraseña debe tener al menos 9 caracteres, con letras y números\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setFormValues({ ...formValues, userName: e.target.value });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setFormValues({ ...formValues, password: e.target.value });\r\n  };\r\n\r\n  const clickSubmit = () => {\r\n    const isValidUserName = validateUserName(formValues.userName);\r\n    const isValidPassword = validatePassword(formValues.password);\r\n\r\n    setValidationStates({\r\n      userNameState: isValidUserName,\r\n      passwordState: isValidPassword,\r\n    });\r\n\r\n    if (isValidUserName && isValidPassword) {\r\n      // Redirigir a robots si las credenciales son válidas\r\n      navigate(\"/robots\");\r\n    } else {\r\n      alert(\"Please correct the errors before submitting.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <img src={header} />\r\n      <Form>\r\n        <Form.Group className=\"mb-6\" controlId=\"formBasicUserName\">\r\n          <Form.Label>Nombre de usuario</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Ingresa tu nombre de usuario\"\r\n            onChange={handleUserChange}\r\n            value={formValues.userName}\r\n            isInvalid={!validationStates.userNameState}\r\n          />\r\n          { !validationStates.userNameState && (\r\n            <Form.Text className=\"text-danger\">\r\n              El nombre de usuario no puede estar vacío.\r\n            </Form.Text>\r\n          )}\r\n          { validationStates.userNameState && (\r\n            <Form.Text className=\"text-muted\">\r\n              El nombre de usuario es obligatorio.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            onChange={handlePasswordChange}\r\n            value={formValues.password}\r\n            isInvalid={!validationStates.passwordState}\r\n          />\r\n          { !validationStates.passwordState && (\r\n            <Form.Text className=\"text-danger\">\r\n              La contraseña debe tener al menos 9 caracteres, incluyendo letras y números.\r\n            </Form.Text>\r\n          )}\r\n          { validationStates.passwordState && (\r\n            <Form.Text className=\"text-muted\">\r\n              Asegúrate de que tu contraseña tenga números y letras y sea de al menos 9 caracteres.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" onClick={clickSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}