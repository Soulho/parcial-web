{"ast":null,"code":"var _jsxFileName = \"C:\\\\U\\\\parcial-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    email: \"\",\n    password: \"\",\n    favClass: \"1\"\n  });\n  const [validationStates, setValidationStates] = useState({\n    emailState: true,\n    // True when valid\n    passwordState: true // True when valid\n  });\n\n  // Email validation on submit\n  const validateEmail = email => {\n    // Basic email regex for validation\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\n    return emailRegex.test(email);\n  };\n  const validatePassword = password => {\n    // Password must be at least 9 characters long and include letters and numbers\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{9,}$/;\n    return passwordRegex.test(password);\n  };\n  const handleEmailChange = e => {\n    setFormValues({\n      ...formValues,\n      email: e.target.value\n    });\n  };\n\n  // Password validation on every change\n  const handlePasswordChange = e => {\n    const newPassword = e.target.value;\n    setFormValues({\n      ...formValues,\n      password: newPassword\n    });\n\n    // Validate password immediately as user types\n    const isValidPassword = validatePassword(newPassword);\n    setValidationStates(prevState => ({\n      ...prevState,\n      passwordState: isValidPassword\n    }));\n  };\n  const handleSelectChange = e => {\n    setFormValues({\n      ...formValues,\n      favClass: e.target.value\n    });\n  };\n  const clickSubmit = () => {\n    // Validate email on submit\n    const isValidEmail = validateEmail(formValues.email);\n    setValidationStates(prevState => ({\n      ...prevState,\n      emailState: isValidEmail\n    }));\n    if (isValidEmail && validationStates.passwordState) {\n      // Call fetch or proceed with form submission\n      alert(JSON.stringify(formValues));\n    } else {\n      alert(\"Please correct the errors before submitting.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Ejemplo de formularios!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-6\",\n        controlId: \"formBasicEmail\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"email\",\n          placeholder: \"Enter email\",\n          onChange: handleEmailChange,\n          value: formValues.email,\n          isInvalid: !validationStates.emailState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), !validationStates.emailState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"Your email should follow an established format.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), validationStates.emailState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"We'll never share your email with anyone else.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Password\",\n          onChange: handlePasswordChange,\n          value: formValues.password,\n          isInvalid: !validationStates.passwordState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), !validationStates.passwordState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"Your password must contain at least 9 characters, including both letters and numbers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), validationStates.passwordState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-muted\",\n          children: \"Your password should have numbers and letters and should be at least 9 characters long.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicCheckbox\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Favorite Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          onChange: handleSelectChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"ISIS3710\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"Programaci\\xF3n con tecnolog\\xEDas web\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: clickSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ardP0NddnWvD42/tDodQ4hddDt0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","_s","formValues","setFormValues","useState","email","password","favClass","validationStates","setValidationStates","emailState","passwordState","validateEmail","emailRegex","test","validatePassword","passwordRegex","handleEmailChange","e","target","value","handlePasswordChange","newPassword","isValidPassword","prevState","handleSelectChange","clickSubmit","isValidEmail","alert","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","Form","Group","className","controlId","Label","Control","type","placeholder","onChange","isInvalid","Text","Select","Button","variant","onClick","_c","$RefreshReg$"],"sources":["C:/U/parcial-web/src/App.js"],"sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    favClass: \"1\",\r\n  });\r\n  const [validationStates, setValidationStates] = useState({\r\n    emailState: true, // True when valid\r\n    passwordState: true, // True when valid\r\n  });\r\n\r\n  // Email validation on submit\r\n  const validateEmail = (email) => {\r\n    // Basic email regex for validation\r\n    const emailRegex = /\\S+@\\S+\\.\\S+/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    // Password must be at least 9 characters long and include letters and numbers\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{9,}$/;\r\n    return passwordRegex.test(password);\r\n  };\r\n\r\n  const handleEmailChange = (e) => {\r\n    setFormValues({ ...formValues, email: e.target.value });\r\n  };\r\n\r\n  // Password validation on every change\r\n  const handlePasswordChange = (e) => {\r\n    const newPassword = e.target.value;\r\n    setFormValues({ ...formValues, password: newPassword });\r\n\r\n    // Validate password immediately as user types\r\n    const isValidPassword = validatePassword(newPassword);\r\n    setValidationStates((prevState) => ({\r\n      ...prevState,\r\n      passwordState: isValidPassword,\r\n    }));\r\n  };\r\n\r\n  const handleSelectChange = (e) => {\r\n    setFormValues({ ...formValues, favClass: e.target.value });\r\n  };\r\n\r\n  const clickSubmit = () => {\r\n    // Validate email on submit\r\n    const isValidEmail = validateEmail(formValues.email);\r\n    setValidationStates((prevState) => ({\r\n      ...prevState,\r\n      emailState: isValidEmail,\r\n    }));\r\n\r\n    if (isValidEmail && validationStates.passwordState) {\r\n      // Call fetch or proceed with form submission\r\n      alert(JSON.stringify(formValues));\r\n    } else {\r\n      alert(\"Please correct the errors before submitting.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Ejemplo de formularios!</h1>\r\n\r\n      <Form>\r\n        <Form.Group className=\"mb-6\" controlId=\"formBasicEmail\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control\r\n            type=\"email\"\r\n            placeholder=\"Enter email\"\r\n            onChange={handleEmailChange}\r\n            value={formValues.email}\r\n            isInvalid={!validationStates.emailState}\r\n          />\r\n          { !validationStates.emailState && (\r\n            <Form.Text className=\"text-danger\">\r\n              Your email should follow an established format.\r\n            </Form.Text>\r\n          )}\r\n          { validationStates.emailState && (\r\n            <Form.Text className=\"text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handlePasswordChange}\r\n            value={formValues.password}\r\n            isInvalid={!validationStates.passwordState}\r\n          />\r\n          { !validationStates.passwordState && (\r\n            <Form.Text className=\"text-danger\">\r\n              Your password must contain at least 9 characters, including both letters and numbers.\r\n            </Form.Text>\r\n          )}\r\n          { validationStates.passwordState && (\r\n            <Form.Text className=\"text-muted\">\r\n              Your password should have numbers and letters and should be at least 9 characters long.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\r\n          <Form.Label>Favorite Class</Form.Label>\r\n          <Form.Select onChange={handleSelectChange}>\r\n            <option value=\"1\">ISIS3710</option>\r\n            <option value=\"2\">Programación con tecnologías web</option>\r\n          </Form.Select>\r\n        </Form.Group>\r\n\r\n        <Button variant=\"primary\" onClick={clickSubmit}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}