{"ast":null,"code":"var _jsxFileName = \"C:\\\\U\\\\parcial-web\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { useNavigate } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formValues, setFormValues] = useState({\n    userName: \"\",\n    password: \"\"\n  });\n  const [validationStates, setValidationStates] = useState({\n    userNameState: true,\n    // True when valid\n    passwordState: true // True when valid\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Para mostrar el error en la UI\n  const navigate = useNavigate(); // Hook para la redirección\n\n  // Validación simple de campos vacíos\n  const validateUserName = userName => {\n    return userName.length > 0; // Verificar que no esté vacío\n  };\n  const validatePassword = password => {\n    return password.length > 0; // Verificar que no esté vacío\n  };\n  const handleUserChange = e => {\n    setFormValues({\n      ...formValues,\n      userName: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setFormValues({\n      ...formValues,\n      password: e.target.value\n    });\n  };\n  const clickSubmit = () => {\n    const isValidUserName = validateUserName(formValues.userName);\n    const isValidPassword = validatePassword(formValues.password);\n    setValidationStates({\n      userNameState: isValidUserName,\n      passwordState: isValidPassword\n    });\n    if (isValidUserName && isValidPassword) {\n      // Realizamos la petición POST al servidor\n      fetch(\"http://localhost:3001/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login: formValues.userName,\n          password: formValues.password\n        })\n      }).then(response => {\n        if (response.status === 200) {\n          return response.json(); // Parseamos la respuesta\n        } else if (response.status === 401) {\n          throw new Error(\"Credenciales incorrectas\");\n        } else {\n          throw new Error(\"Error desconocido\");\n        }\n      }).then(data => {\n        if (data.status === \"success\") {\n          // Si las credenciales son correctas, redirigimos a Robots\n          navigate(\"/robots\");\n        }\n      }).catch(error => {\n        // Mostramos el mensaje de error debajo del botón de submit\n        setErrorMessage(error.message);\n      });\n    } else {\n      setErrorMessage(\"Por favor, rellena todos los campos correctamente.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      className: \"form-container\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-6\",\n        controlId: \"formBasicUserName\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Nombre de usuario\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Ingresa tu nombre de usuario\",\n          onChange: handleUserChange,\n          value: formValues.userName,\n          isInvalid: !validationStates.userNameState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), !validationStates.userNameState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"El nombre de usuario no puede estar vac\\xEDo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Contrase\\xF1a\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"password\",\n          placeholder: \"Contrase\\xF1a\",\n          onChange: handlePasswordChange,\n          value: formValues.password,\n          isInvalid: !validationStates.passwordState\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), !validationStates.passwordState && /*#__PURE__*/_jsxDEV(Form.Text, {\n          className: \"text-danger\",\n          children: \"La contrase\\xF1a no puede estar vac\\xEDa.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          id: \"login\",\n          variant: \"primary\",\n          onClick: clickSubmit,\n          children: \"Ingresar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          id: \"cancel\",\n          variant: \"danger\",\n          onClick: () => setFormValues({\n            userName: '',\n            password: ''\n          }),\n          children: \"Cancelar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+8HIssNEuRufT8wK7b+5k2niTa0=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Form","Button","useNavigate","NavBar","jsxDEV","_jsxDEV","App","_s","formValues","setFormValues","userName","password","validationStates","setValidationStates","userNameState","passwordState","errorMessage","setErrorMessage","navigate","validateUserName","length","validatePassword","handleUserChange","e","target","value","handlePasswordChange","clickSubmit","isValidUserName","isValidPassword","fetch","method","headers","body","JSON","stringify","login","then","response","status","json","Error","data","catch","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Group","controlId","Label","Control","type","placeholder","onChange","isInvalid","Text","id","variant","onClick","_c","$RefreshReg$"],"sources":["C:/U/parcial-web/src/App.js"],"sourcesContent":["import './App.css';\r\nimport React, { useState } from \"react\";\r\nimport { Form, Button } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport NavBar from \"./components/NavBar\";\r\n\r\nfunction App() {\r\n  const [formValues, setFormValues] = useState({\r\n    userName: \"\",\r\n    password: \"\"\r\n  });\r\n\r\n  const [validationStates, setValidationStates] = useState({\r\n    userNameState: true, // True when valid\r\n    passwordState: true, // True when valid\r\n  });\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // Para mostrar el error en la UI\r\n  const navigate = useNavigate(); // Hook para la redirección\r\n\r\n  // Validación simple de campos vacíos\r\n  const validateUserName = (userName) => {\r\n    return userName.length > 0; // Verificar que no esté vacío\r\n  };\r\n\r\n  const validatePassword = (password) => {\r\n    return password.length > 0; // Verificar que no esté vacío\r\n  };\r\n\r\n  const handleUserChange = (e) => {\r\n    setFormValues({ ...formValues, userName: e.target.value });\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setFormValues({ ...formValues, password: e.target.value });\r\n  };\r\n\r\n  const clickSubmit = () => {\r\n    const isValidUserName = validateUserName(formValues.userName);\r\n    const isValidPassword = validatePassword(formValues.password);\r\n\r\n    setValidationStates({\r\n      userNameState: isValidUserName,\r\n      passwordState: isValidPassword,\r\n    });\r\n\r\n    if (isValidUserName && isValidPassword) {\r\n      // Realizamos la petición POST al servidor\r\n      fetch(\"http://localhost:3001/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          login: formValues.userName,\r\n          password: formValues.password,\r\n        }),\r\n      })\r\n        .then((response) => {\r\n          if (response.status === 200) {\r\n            return response.json(); // Parseamos la respuesta\r\n          } else if (response.status === 401) {\r\n            throw new Error(\"Credenciales incorrectas\");\r\n          } else {\r\n            throw new Error(\"Error desconocido\");\r\n          }\r\n        })\r\n        .then((data) => {\r\n          if (data.status === \"success\") {\r\n            // Si las credenciales son correctas, redirigimos a Robots\r\n            navigate(\"/robots\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          // Mostramos el mensaje de error debajo del botón de submit\r\n          setErrorMessage(error.message);\r\n        });\r\n    } else {\r\n      setErrorMessage(\"Por favor, rellena todos los campos correctamente.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <NavBar></NavBar>\r\n\r\n      <Form className=\"form-container\">\r\n        <Form.Group className=\"mb-6\" controlId=\"formBasicUserName\">\r\n          <Form.Label>Nombre de usuario</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Ingresa tu nombre de usuario\"\r\n            onChange={handleUserChange}\r\n            value={formValues.userName}\r\n            isInvalid={!validationStates.userNameState}\r\n          />\r\n          {!validationStates.userNameState && (\r\n            <Form.Text className=\"text-danger\">\r\n              El nombre de usuario no puede estar vacío.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n          <Form.Label>Contraseña</Form.Label>\r\n          <Form.Control\r\n            type=\"password\"\r\n            placeholder=\"Contraseña\"\r\n            onChange={handlePasswordChange}\r\n            value={formValues.password}\r\n            isInvalid={!validationStates.passwordState}\r\n          />\r\n          {!validationStates.passwordState && (\r\n            <Form.Text className=\"text-danger\">\r\n              La contraseña no puede estar vacía.\r\n            </Form.Text>\r\n          )}\r\n        </Form.Group>\r\n\r\n        <div className=\"button-group\">\r\n          <Button id=\"login\" variant=\"primary\" onClick={clickSubmit}>\r\n            Ingresar\r\n          </Button>\r\n          <Button id=\"cancel\" variant=\"danger\" onClick={() => setFormValues({ userName: '', password: '' })}>\r\n            Cancelar\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Mostrar mensaje de error si las credenciales son incorrectas */}\r\n        {errorMessage && (\r\n          <div className=\"error-message\">\r\n            {errorMessage}\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,EAAEC,MAAM,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC;IAC3CW,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC;IACvDe,aAAa,EAAE,IAAI;IAAE;IACrBC,aAAa,EAAE,IAAI,CAAE;EACvB,CAAC,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAMmB,QAAQ,GAAGhB,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC;EACA,MAAMiB,gBAAgB,GAAIT,QAAQ,IAAK;IACrC,OAAOA,QAAQ,CAACU,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAIV,QAAQ,IAAK;IACrC,OAAOA,QAAQ,CAACS,MAAM,GAAG,CAAC,CAAC,CAAC;EAC9B,CAAC;EAED,MAAME,gBAAgB,GAAIC,CAAC,IAAK;IAC9Bd,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAEE,QAAQ,EAAEa,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,oBAAoB,GAAIH,CAAC,IAAK;IAClCd,aAAa,CAAC;MAAE,GAAGD,UAAU;MAAEG,QAAQ,EAAEY,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC5D,CAAC;EAED,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,eAAe,GAAGT,gBAAgB,CAACX,UAAU,CAACE,QAAQ,CAAC;IAC7D,MAAMmB,eAAe,GAAGR,gBAAgB,CAACb,UAAU,CAACG,QAAQ,CAAC;IAE7DE,mBAAmB,CAAC;MAClBC,aAAa,EAAEc,eAAe;MAC9Bb,aAAa,EAAEc;IACjB,CAAC,CAAC;IAEF,IAAID,eAAe,IAAIC,eAAe,EAAE;MACtC;MACAC,KAAK,CAAC,6BAA6B,EAAE;QACnCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,KAAK,EAAE5B,UAAU,CAACE,QAAQ;UAC1BC,QAAQ,EAAEH,UAAU,CAACG;QACvB,CAAC;MACH,CAAC,CAAC,CACC0B,IAAI,CAAEC,QAAQ,IAAK;QAClB,IAAIA,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAC3B,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1B,CAAC,MAAM,IAAIF,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;UAClC,MAAM,IAAIE,KAAK,CAAC,0BAA0B,CAAC;QAC7C,CAAC,MAAM;UACL,MAAM,IAAIA,KAAK,CAAC,mBAAmB,CAAC;QACtC;MACF,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;QACd,IAAIA,IAAI,CAACH,MAAM,KAAK,SAAS,EAAE;UAC7B;UACArB,QAAQ,CAAC,SAAS,CAAC;QACrB;MACF,CAAC,CAAC,CACDyB,KAAK,CAAEC,KAAK,IAAK;QAChB;QACA3B,eAAe,CAAC2B,KAAK,CAACC,OAAO,CAAC;MAChC,CAAC,CAAC;IACN,CAAC,MAAM;MACL5B,eAAe,CAAC,oDAAoD,CAAC;IACvE;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKyC,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1C,OAAA,CAACF,MAAM;MAAA6C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eAEjB9C,OAAA,CAACL,IAAI;MAAC8C,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC9B1C,OAAA,CAACL,IAAI,CAACoD,KAAK;QAACN,SAAS,EAAC,MAAM;QAACO,SAAS,EAAC,mBAAmB;QAAAN,QAAA,gBACxD1C,OAAA,CAACL,IAAI,CAACsD,KAAK;UAAAP,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eAC1C9C,OAAA,CAACL,IAAI,CAACuD,OAAO;UACXC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,8BAA8B;UAC1CC,QAAQ,EAAEpC,gBAAiB;UAC3BG,KAAK,EAAEjB,UAAU,CAACE,QAAS;UAC3BiD,SAAS,EAAE,CAAC/C,gBAAgB,CAACE;QAAc;UAAAkC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,EACD,CAACvC,gBAAgB,CAACE,aAAa,iBAC9BT,OAAA,CAACL,IAAI,CAAC4D,IAAI;UAACd,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACZ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEb9C,OAAA,CAACL,IAAI,CAACoD,KAAK;QAACN,SAAS,EAAC,MAAM;QAACO,SAAS,EAAC,mBAAmB;QAAAN,QAAA,gBACxD1C,OAAA,CAACL,IAAI,CAACsD,KAAK;UAAAP,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACnC9C,OAAA,CAACL,IAAI,CAACuD,OAAO;UACXC,IAAI,EAAC,UAAU;UACfC,WAAW,EAAC,eAAY;UACxBC,QAAQ,EAAEhC,oBAAqB;UAC/BD,KAAK,EAAEjB,UAAU,CAACG,QAAS;UAC3BgD,SAAS,EAAE,CAAC/C,gBAAgB,CAACG;QAAc;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5C,CAAC,EACD,CAACvC,gBAAgB,CAACG,aAAa,iBAC9BV,OAAA,CAACL,IAAI,CAAC4D,IAAI;UAACd,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAEnC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CACZ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACS,CAAC,eAEb9C,OAAA;QAAKyC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1C,OAAA,CAACJ,MAAM;UAAC4D,EAAE,EAAC,OAAO;UAACC,OAAO,EAAC,SAAS;UAACC,OAAO,EAAEpC,WAAY;UAAAoB,QAAA,EAAC;QAE3D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT9C,OAAA,CAACJ,MAAM;UAAC4D,EAAE,EAAC,QAAQ;UAACC,OAAO,EAAC,QAAQ;UAACC,OAAO,EAAEA,CAAA,KAAMtD,aAAa,CAAC;YAAEC,QAAQ,EAAE,EAAE;YAAEC,QAAQ,EAAE;UAAG,CAAC,CAAE;UAAAoC,QAAA,EAAC;QAEnG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EAGLnC,YAAY,iBACXX,OAAA;QAAKyC,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3B/B;MAAY;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC5C,EAAA,CAnIQD,GAAG;EAAA,QAYOJ,WAAW;AAAA;AAAA8D,EAAA,GAZrB1D,GAAG;AAqIZ,eAAeA,GAAG;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}